[1/11] Linking C static library esp-idf\main\libmain.a
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Benja\OneDrive\Documents\Esp32Precision\ESP32Precision\FlightControl\test\build\bootloader\esp-idf\esptool_py && C:\Users\Benja\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Benja/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build/bootloader/bootloader.bin"
Bootloader binary size 0x51f0 bytes. 0x2e10 bytes (36%) free.
[3/9] Building C object esp-idf/LIS2DW12_test/CMakeFiles/__LIS2DW12_test.dir/test_mean.c.obj
[4/9] Linking C static library esp-idf\LIS2DW12_test\libtest.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable flightcontrol_unit_test.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build/flightcontrol_unit_test.bin
[8/9] cmd.exe /C "cd /D C:\Users\Benja\OneDrive\Documents\Esp32Precision\ESP32Precision\FlightControl\test\build\esp-idf\esptool_py && C:\Users\Benja\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Benja/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build/partition_table/partition-table.bin C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build/flightcontrol_unit_test.bin"
flightcontrol_unit_test.bin binary size 0x31f10 bytes. Smallest app partition is 0x100000 bytes. 0xce0f0 bytes (80%) free.
[8/9] cmd.exe /C "cd /D C:\Users\Benja\esp\esp-idf\components\esptool_py && C:\Users\Benja\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Benja/esp/esp-idf -D SERIAL_TOOL=C:/Users/Benja/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/Benja/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build -P C:/Users/Benja/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM12 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 flightcontrol_unit_test.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port COM12

A fatal error occurred: Could not open COM12, the port doesn't exist
FAILED: CMakeFiles/flash C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\Users\Benja\esp\esp-idf\components\esptool_py && C:\Users\Benja\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Benja/esp/esp-idf -D SERIAL_TOOL=C:/Users/Benja/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/Benja/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Benja/OneDrive/Documents/Esp32Precision/ESP32Precision/FlightControl/test/build -P C:/Users/Benja/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
